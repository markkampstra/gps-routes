<%-
  coords = []
  entries = LocationEntryRepository.new.aggregate
  entries.each do |entry|
    coords << "{lat: #{entry[:lat]}, lng: #{entry[:lon]}}"
  end
%>
<% if false %>
<table>
  <tr>
    <th>Lat</th>
    <th>Lon</th>
    <th>Start</th>
    <th>End</th>
    <th>Time</th>
    <th>Points</th>
  </tr>
  <% LocationEntryRepository.new.aggregate.each do |entry| %>
    <tr>
      <td><%= entry[:lat].to_f %></td>
      <td><%= entry[:lon].to_f %></td>
      <td><%= entry[:start_at] %></td>
      <td><%= entry[:end_at] %></td>
      <td><%= entry[:time] %></td>
      <td><%= entry[:nr_points] %></td>
    </tr>
  <% end %>
</table>
<% end %>
    <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 100%;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
      #toggle-short-stops {
        position: absolute;
        left: 10px;
        top: 60px;
        border: 1px solid #eee;
        background-color: #fff;
        font-family: Roboto, Arial, sans-serif;
        font-size: 18px;
        padding: 0 23px;
        cursor: pointer;
      }
      #toggle-long-stops {
        position: absolute;
        left: 10px;
        top: 100px;
        border: 1px solid #eee;
        background-color: #fff;
        font-family: Roboto, Arial, sans-serif;
        font-size: 18px;
        padding: 0 23px;
        cursor: pointer;
      }
    </style>
<div id="map"></div>
<div id="toggle-short-stops">stops korter dan 1/2 dag</div>
<div id="toggle-long-stops">stops langer dan 1/2 dag</div>
<script>
  var short_markers = [];
  var long_markers = [];
  var infowindow = null;
  function initMap() {
    var map = new google.maps.Map(document.getElementById('map'), {
      zoom: 4,
      center: {lat: 59.334591, lng: 18.063240},
      mapTypeId: 'terrain'
    });

    var flightPlanCoordinates = [
      <%= coords.join(',') %>
    ];
    var flightPath = new google.maps.Polyline({
      path: flightPlanCoordinates,
      geodesic: true,
      strokeColor: '#FF0000',
      strokeOpacity: 1.0,
      strokeWeight: 2
    });

    flightPath.setMap(map);
    var counter = 0;

    <% counter = 0 %>
    <% entries.each do |entry| %>
      <% next if entry[:time] < 3600 %>
      <%
        duration = entry[:time] / 60.0 / 60.0 / 24.0
        duration_str = "Â± #{(duration * 24.0).round} uur" if duration < 0.6
        duration_str = "#{duration.ceil} dag(en)" if duration >= 0.6
        date_fmt = '%d-%m-%Y'
        date_fmt << ' %H:%M' if duration < 0.6
        short = duration < 0.6
      %>
      var marker = new google.maps.Marker({
        position: {lat: <%= entry[:lat] %>, lng: <%= entry[:lon] %>},
        map: map,
        info: '<%= duration_str %> hier<br />Van: <%= entry[:start_at].strftime(date_fmt) %><br />Tot: <%= entry[:end_at].strftime(date_fmt) %><br />Totaal: <%= entry[:total_distance].round %> km',
        label: '<%= counter + 1 %>'
      });
      <% if short %>
        marker.setVisible(false);
        short_markers.push(marker);
      <% else %>
        long_markers.push(marker);
      <% end %>
      marker.addListener('click', function() {
        if (infowindow) {
          infowindow.close();
        }
        infowindow = new google.maps.InfoWindow({
          content: this.info
        })
        infowindow.open(map, this);
      });
      counter++;
      <% counter += 1 %>
    <% end %>
    var toggle_short_stops = document.getElementById('toggle-short-stops');
    toggle_short_stops.addEventListener('click', function() {
      for(var marker in short_markers) {
        short_markers[marker].setVisible(!short_markers[marker].visible);
      }
    });
    var toggle_long_stops = document.getElementById('toggle-long-stops');
    toggle_long_stops.addEventListener('click', function() {
      for(var marker in short_markers) {
        long_markers[marker].setVisible(!long_markers[marker].visible);
      }
    });
  }
</script>
<script async defer
     src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAPS_API_KEY'] %>&callback=initMap">
</script>

